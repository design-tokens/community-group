---
import Stack from '@/components/Stack/Stack.astro';
import Text from '@/components/Text/Text.astro';
import { SITE_TITLE } from '@/consts';
import { menu } from '@/site.config';
import { Icon } from "astro-icon/components";
import { isLinkAbsolute } from "@/utils/string.utils";

const year = new Date().getFullYear();
const url = new URL(Astro.request.url);
---

<footer class="l-footer">
  <Stack axis="y" gap={4}>
    <Text variant="sm">
      <span>Â© {year}</span>
      <span>{SITE_TITLE}</span>
    </Text>
    <Text variant="xs" color="color-text-subdued">Deploys by Netlify</Text>
  </Stack>

  <nav class="l-footer__nav">
    <div class="l-footer__subnav">
      <Text variant='body' as='h2' color='color-text-subdued'>Spec</Text>
      <ul class="u-list-reset">
        {
          menu.about.map((link) => (
            <li>
              <a
                aria-current={url.pathname === link.path ? 'page' : false}
                data-astro-prefetch
                class="link"
                href={link.path}
                aria-label={isLinkAbsolute(link.path) ? `Link opens in a new window (${link.path})` : link.title}
                target={isLinkAbsolute(link.path) ? '_blank' : undefined}
              >
                <Fragment set:html={link.title} />{isLinkAbsolute(link.path) ? <Icon name='external' /> : null}
              </a>
            </li>
          ))
        }
      </ul>
    </div>

    <div class="l-footer__subnav">
      <Text variant='body' as='h2' color='color-text-subdued'>Community Group</Text>
      <ul class="u-list-reset">
        {
          menu.learn.map((link) => (
            <li>
              <a
                aria-current={url.pathname === link.path ? 'page' : false}
                data-astro-prefetch
                class="link"
                href={link.path}
                aria-label={isLinkAbsolute(link.path) ? `Link opens in a new window (${link.path})` : link.title}
                target={isLinkAbsolute(link.path) ? '_blank' : undefined}
              >
                <Fragment set:html={link.title} />{isLinkAbsolute(link.path) ? <Icon name='external' /> : null}
              </a>
            </li>
          ))
        }
      </ul>
    </div>

    <div class="l-footer__subnav">
      <Text variant='body' as='h2' color='color-text-subdued'>Social</Text>
      <Stack axis='x' gap={3} as='ul' class="u-list-reset">
        {
          menu.social.map((link) => (
            <li>
              <a
                class="social-link"
                href={link.path}
                target="_blank"
                aria-label={link.label}
              >
                <Icon name={link.icon} />
              </a>
            </li>
          ))
        }
      </Stack>
    </div>
  </nav>
</footer>

<style lang="scss">
  .l-footer {
    display: flex;
    gap: var(--base-space-8);
    background-color: var(--color-bg);
    border-block-start: 1px solid var(--color-border);
    padding-block-end: var(--base-space-12);
    padding-block-start: var(--base-space-8);
    padding-inline: var(--page-padding-x);

    @media screen and (width <= 950px) {
      flex-direction: column;
    }
    @media screen and (width >= 951px) {
      justify-content: space-between;
    }

    .link {
      font-size: var(--font-size-sm);
      line-height: 2;
    }

    .social-link {
      --icon-size: var(--base-space-4);

      align-items: center;
      display: flex;
      justify-content: center;
      width: var(--icon-size);
      height: var(--icon-size);

      svg {
        block-size: 100%;
        inline-size: 100%;
      }

      &:hover {
        color: var(--color-action-subdued);
      }
    }
  }

  .l-footer__nav {
    --gap: var(--base-space-8);

    display: flex;
    gap: var(--gap);

    @media screen and (width <= 600px) {
      flex-direction: column;
    }

    @media screen and (width >= 601px) {
      --gap: var(--base-space-12);
    }
  }

  .l-footer__subnav {
    display: flex;
    flex-direction: column;
    gap: var(--base-space-4);
    width: max-content;
  }
</style>
